var m=Object.defineProperty;var u=E=>{throw TypeError(E)};var S=(E,t,e)=>t in E?m(E,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[t]=e;var n=(E,t,e)=>S(E,typeof t!="symbol"?t+"":t,e),_=(E,t,e)=>t.has(E)||u("Cannot "+e);var i=(E,t,e)=>(_(E,t,"read from private field"),e?e.call(E):t.get(E)),d=(E,t,e)=>t.has(E)?u("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(E):t.set(E,e),I=(E,t,e,s)=>(_(E,t,"write to private field"),s?s.call(E,e):t.set(E,e),e);var r;(function(E){E.LOAD="LOAD",E.EXEC="EXEC",E.FFPROBE="FFPROBE",E.WRITE_FILE="WRITE_FILE",E.READ_FILE="READ_FILE",E.DELETE_FILE="DELETE_FILE",E.RENAME="RENAME",E.CREATE_DIR="CREATE_DIR",E.LIST_DIR="LIST_DIR",E.DELETE_DIR="DELETE_DIR",E.ERROR="ERROR",E.DOWNLOAD="DOWNLOAD",E.PROGRESS="PROGRESS",E.LOG="LOG",E.MOUNT="MOUNT",E.UNMOUNT="UNMOUNT"})(r||(r={}));const w=(()=>{let E=0;return()=>E++})(),U=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),p=new Error("called FFmpeg.terminate()");var a,D,h,O,f,L,R;class b{constructor(){d(this,a,null);d(this,D,{});d(this,h,{});d(this,O,[]);d(this,f,[]);n(this,"loaded",!1);d(this,L,()=>{i(this,a)&&(i(this,a).onmessage=({data:{id:t,type:e,data:s}})=>{switch(e){case r.LOAD:this.loaded=!0,i(this,D)[t](s);break;case r.MOUNT:case r.UNMOUNT:case r.EXEC:case r.FFPROBE:case r.WRITE_FILE:case r.READ_FILE:case r.DELETE_FILE:case r.RENAME:case r.CREATE_DIR:case r.LIST_DIR:case r.DELETE_DIR:i(this,D)[t](s);break;case r.LOG:i(this,O).forEach(o=>o(s));break;case r.PROGRESS:i(this,f).forEach(o=>o(s));break;case r.ERROR:i(this,h)[t](s);break}delete i(this,D)[t],delete i(this,h)[t]})});d(this,R,({type:t,data:e},s=[],o)=>i(this,a)?new Promise((N,c)=>{const l=w();i(this,a)&&i(this,a).postMessage({id:l,type:t,data:e},s),i(this,D)[l]=N,i(this,h)[l]=c,o==null||o.addEventListener("abort",()=>{c(new DOMException(`Message # ${l} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(U));n(this,"load",({classWorkerURL:t,...e}={},{signal:s}={})=>(i(this,a)||(I(this,a,t?new Worker(new URL(t,import.meta.url),{type:"module"}):new Worker(new URL(""+new URL("worker-BAOIWoxA.js",import.meta.url).href,import.meta.url),{type:"module"})),i(this,L).call(this)),i(this,R).call(this,{type:r.LOAD,data:e},void 0,s)));n(this,"exec",(t,e=-1,{signal:s}={})=>i(this,R).call(this,{type:r.EXEC,data:{args:t,timeout:e}},void 0,s));n(this,"ffprobe",(t,e=-1,{signal:s}={})=>i(this,R).call(this,{type:r.FFPROBE,data:{args:t,timeout:e}},void 0,s));n(this,"terminate",()=>{const t=Object.keys(i(this,h));for(const e of t)i(this,h)[e](p),delete i(this,h)[e],delete i(this,D)[e];i(this,a)&&(i(this,a).terminate(),I(this,a,null),this.loaded=!1)});n(this,"writeFile",(t,e,{signal:s}={})=>{const o=[];return e instanceof Uint8Array&&o.push(e.buffer),i(this,R).call(this,{type:r.WRITE_FILE,data:{path:t,data:e}},o,s)});n(this,"mount",(t,e,s)=>{const o=[];return i(this,R).call(this,{type:r.MOUNT,data:{fsType:t,options:e,mountPoint:s}},o)});n(this,"unmount",t=>{const e=[];return i(this,R).call(this,{type:r.UNMOUNT,data:{mountPoint:t}},e)});n(this,"readFile",(t,e="binary",{signal:s}={})=>i(this,R).call(this,{type:r.READ_FILE,data:{path:t,encoding:e}},void 0,s));n(this,"deleteFile",(t,{signal:e}={})=>i(this,R).call(this,{type:r.DELETE_FILE,data:{path:t}},void 0,e));n(this,"rename",(t,e,{signal:s}={})=>i(this,R).call(this,{type:r.RENAME,data:{oldPath:t,newPath:e}},void 0,s));n(this,"createDir",(t,{signal:e}={})=>i(this,R).call(this,{type:r.CREATE_DIR,data:{path:t}},void 0,e));n(this,"listDir",(t,{signal:e}={})=>i(this,R).call(this,{type:r.LIST_DIR,data:{path:t}},void 0,e));n(this,"deleteDir",(t,{signal:e}={})=>i(this,R).call(this,{type:r.DELETE_DIR,data:{path:t}},void 0,e))}on(t,e){t==="log"?i(this,O).push(e):t==="progress"&&i(this,f).push(e)}off(t,e){t==="log"?I(this,O,i(this,O).filter(s=>s!==e)):t==="progress"&&I(this,f,i(this,f).filter(s=>s!==e))}}a=new WeakMap,D=new WeakMap,h=new WeakMap,O=new WeakMap,f=new WeakMap,L=new WeakMap,R=new WeakMap;var A;(function(E){E.MEMFS="MEMFS",E.NODEFS="NODEFS",E.NODERAWFS="NODERAWFS",E.IDBFS="IDBFS",E.WORKERFS="WORKERFS",E.PROXYFS="PROXYFS"})(A||(A={}));export{A as FFFSType,b as FFmpeg};
